/* tslint:disable */
/* eslint-disable */
/**
 * Logic Tool
 * API for managing the Logic Tool
 *
 * The version of the OpenAPI document: 1.0
 * Contact: dmacau@campus.fct.unl.pt
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
     ExpComponentFromJSONTyped,
     MarkComponentFromJSONTyped,
     RuleComponentFromJSONTyped,
     TreeComponentFromJSONTyped
} from './index';

/**
 * 
 * @export
 * @interface Component
 */
export interface Component {
    /**
     * 
     * @type {string}
     * @memberof Component
     */
    type?: string;
}

/**
 * Check if a given object implements the Component interface.
 */
export function instanceOfComponent(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ComponentFromJSON(json: any): Component {
    return ComponentFromJSONTyped(json, false);
}

export function ComponentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Component {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['type'] === 'EXP') {
            return ExpComponentFromJSONTyped(json, true);
        }
        if (json['type'] === 'MARK') {
            return MarkComponentFromJSONTyped(json, true);
        }
        if (json['type'] === 'RULE') {
            return RuleComponentFromJSONTyped(json, true);
        }
        if (json['type'] === 'TREE') {
            return TreeComponentFromJSONTyped(json, true);
        }
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function ComponentToJSON(value?: Component | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
    };
}

