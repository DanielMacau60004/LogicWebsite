<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="961377de-44c0-4ce8-9942-64e88caeedf7" name="Changes" comment="Starting implementing the advanced algorithm">
      <change beforePath="$PROJECT_DIR$/../../LC/Exercícios/NDpack.pdf" beforeDir="false" afterPath="$PROJECT_DIR$/../../LC/Exercícios/NDpack.pdf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../Plan/latex/Chapters/chapter2.tex" beforeDir="false" afterPath="$PROJECT_DIR$/../../Plan/latex/Chapters/chapter2.tex" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../DeductionTrees/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/../DeductionTrees/index.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../DeductionTrees/scripts/scripts.js" beforeDir="false" afterPath="$PROJECT_DIR$/../DeductionTrees/scripts/scripts.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../DeductionTrees/scripts/tree/events.js" beforeDir="false" afterPath="$PROJECT_DIR$/../DeductionTrees/scripts/tree/events.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../DeductionTrees/scripts/tree/rules.js" beforeDir="false" afterPath="$PROJECT_DIR$/../DeductionTrees/scripts/tree/rules.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../DeductionTrees/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/../DeductionTrees/style.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/labs/src/algorithm/backup4/implementation/TestStateMachine.java" beforeDir="false" afterPath="$PROJECT_DIR$/labs/src/algorithm/backup4/implementation/TestStateMachine.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/labs/src/algorithm/implementation/newImp/Solution.java" beforeDir="false" afterPath="$PROJECT_DIR$/labs/src/algorithm/implementation/newImp/Solution.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/labs/src/algorithm/implementation/newImp/StateGraph.java" beforeDir="false" afterPath="$PROJECT_DIR$/labs/src/algorithm/implementation/newImp/StateGraph.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/labs/src/algorithm/implementation/newImp/TransitionGraph.java" beforeDir="false" afterPath="$PROJECT_DIR$/labs/src/algorithm/implementation/newImp/TransitionGraph.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/algorithm/implementation/TestStateMachine.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/algorithm/implementation/TestStateMachine.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/algorithm/implementation/newImp/Solution.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/algorithm/implementation/newImp/Solution.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/algorithm/implementation/newImp/StateGraph.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/algorithm/implementation/newImp/StateGraph.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/test-classes/algorithm/implementation/TestStateMachine.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/algorithm/implementation/TestStateMachine.class" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Enum" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/../.." />
    <option name="RESET_MODE" value="MIXED" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;DanielMacau60004&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/DanielMacau60004/Thesis.git&quot;,
    &quot;accountId&quot;: &quot;a1f6f68b-9cad-4c6e-8273-ec5161e97fb3&quot;
  }
}</component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="2foexDtzJkzWYREr4R8Nu35qViG" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Application.Console.executor&quot;: &quot;Run&quot;,
    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
    &quot;Application.TestStateMachine.executor&quot;: &quot;Run&quot;,
    &quot;Application.Tests.executor&quot;: &quot;Run&quot;,
    &quot;Application.algorithm.Test.executor&quot;: &quot;Run&quot;,
    &quot;Application.algorithm.backup.implementation.TestStateMachine.executor&quot;: &quot;Run&quot;,
    &quot;Application.algorithm.backup3.implementation.TestStateMachine.executor&quot;: &quot;Run&quot;,
    &quot;Application.algorithm.backup4.implementation.TestStateMachine.executor&quot;: &quot;Run&quot;,
    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
    &quot;JUnit.PropTests.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PropTests.negation.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.PropTests.syntaxErrors.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.TestStateMachine.testSolutionValidExpressions.[21] ((a → b) ∧ (b → a)) → (((a ∧ c) → (b ∧ c)) ∧ ((b ∧ c) → (a ∧ c))).executor&quot;: &quot;Run&quot;,
    &quot;JUnit.TestStateMachine.testSolutionValidExpressions.[26] ((p ∨ q) ∨ (r ∨ s)) → ((p ∨ s) ∨ (r ∨ q)).executor&quot;: &quot;Run&quot;,
    &quot;JUnit.TestStateMachine.testSolutionValidExpressions.[27] (¬(p ∧ q) → (¬p ∨ ¬q)) ∧ ((¬p ∨ ¬q) → ¬(p ∧ q)).executor&quot;: &quot;Run&quot;,
    &quot;JUnit.TestStateMachine.testSolutionValidExpressions.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.TestStateMachine.testSolutionValidExpressionsSolo.[1] ((¬p → q) ∧ (r ∨ ¬q) ∧ (p → (a ∨ b)) ∧ (¬r ∧ ¬b)) → a.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.TestStateMachine.testSolutionValidExpressionsSolo.executor&quot;: &quot;Run&quot;,
    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_directory_selection&quot;: &quot;C:/Users/mcmac/Desktop/Thesis/Projects/JavaParser/src/test/java&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/mcmac/Desktop/Thesis/Projects/JavaParser/labs/src/algorithm/backup5/implementation&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.345977&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\mcmac\Desktop\Thesis\Projects\JavaParser\labs\src\algorithm\backup5\implementation" />
      <recent name="C:\Users\mcmac\Desktop\Thesis\Projects\JavaParser\labs\src\algorithm\backup4.implementation" />
      <recent name="C:\Users\mcmac\Desktop\Thesis\Projects\JavaParser\labs\src\algorithm\backup3.implementation" />
      <recent name="C:\Users\mcmac\Desktop\Thesis\Projects\JavaParser\labs\src\algorithm\backup2.implementation" />
      <recent name="C:\Users\mcmac\Desktop\Thesis\Projects\JavaParser\labs\src\algorithm\back1.implementation" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\mcmac\Desktop\Thesis\Projects\JavaParser\resources\Logic" />
      <recent name="C:\Users\mcmac\Desktop\Universidade\4º ano\8º semestre\Interpretação e Compilação de Linguagens\ICL-Project\ICL\labs\src\main\scripts" />
      <recent name="C:\Users\mcmac\Desktop\Universidade\4º ano\8º semestre\Interpretação e Compilação de Linguagens\ICL-Project\ICL\labs\src\tests" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="algorithm.implementation.newImp" />
      <recent name="algorithm.implementation" />
      <recent name="algorithm.rules" />
      <recent name="algorithm" />
      <recent name="types" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.TestStateMachine.testSolutionValidExpressions">
    <configuration name="TestStateMachine" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="algorithm.implementation.TestStateMachine" />
      <module name="JavaParser" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="algorithm.implementation.newImp.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Tests" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="algorithm.implementation.Tests" />
      <module name="JavaParser" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="algorithm.implementation.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="algorithm.backup3.implementation.TestStateMachine" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="algorithm.backup3.implementation.TestStateMachine" />
      <module name="ICL" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="algorithm.backup3.implementation.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="algorithm.backup4.implementation.TestStateMachine" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="algorithm.backup4.implementation.TestStateMachine" />
      <module name="JavaParser" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="algorithm.backup4.implementation.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestStateMachine.testSolutionValidExpressions" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="JavaParser" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="algorithm.implementation.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="algorithm.implementation" />
      <option name="MAIN_CLASS_NAME" value="algorithm.implementation.TestStateMachine" />
      <option name="METHOD_NAME" value="testSolutionValidExpressions(java.lang.String)" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestStateMachine.testSolutionValidExpressionsSolo" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="JavaParser" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="algorithm.implementation.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="algorithm.implementation" />
      <option name="MAIN_CLASS_NAME" value="algorithm.implementation.TestStateMachine" />
      <option name="METHOD_NAME" value="testSolutionValidExpressionsSolo(java.lang.String)" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestStateMachine.testSolutionValidExpressionsSolo.[1] ((¬p → q) ∧ (r ∨ ¬q) ∧ (p → (a ∨ b)) ∧ (¬r ∧ ¬b)) → a" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="JavaParser" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="algorithm.implementation.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="algorithm.implementation" />
      <option name="MAIN_CLASS_NAME" value="algorithm.implementation.TestStateMachine" />
      <option name="METHOD_NAME" value="testSolutionValidExpressionsSolo(java.lang.String)" />
      <option name="TEST_OBJECT" value="uniqueId" />
      <uniqueIds>
        <uniqueId value="[engine:junit-jupiter]/[class:algorithm.implementation.TestStateMachine]/[test-template:testSolutionValidExpressionsSolo(java.lang.String)]/[test-template-invocation:#1]" />
      </uniqueIds>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestStateMachine.testSolutionValidExpressions.[21] ((a → b) ∧ (b → a)) → (((a ∧ c) → (b ∧ c)) ∧ ((b ∧ c) → (a ∧ c)))" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="JavaParser" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="algorithm.implementation.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="algorithm.implementation" />
      <option name="MAIN_CLASS_NAME" value="algorithm.implementation.TestStateMachine" />
      <option name="METHOD_NAME" value="testSolutionValidExpressions(java.lang.String)" />
      <option name="TEST_OBJECT" value="uniqueId" />
      <uniqueIds>
        <uniqueId value="[engine:junit-jupiter]/[class:algorithm.implementation.TestStateMachine]/[test-template:testSolutionValidExpressions(java.lang.String)]/[test-template-invocation:#21]" />
      </uniqueIds>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestStateMachine.testSolutionValidExpressions.[26] ((p ∨ q) ∨ (r ∨ s)) → ((p ∨ s) ∨ (r ∨ q))" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="JavaParser" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="algorithm.implementation.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="algorithm.implementation" />
      <option name="MAIN_CLASS_NAME" value="algorithm.implementation.TestStateMachine" />
      <option name="METHOD_NAME" value="testSolutionValidExpressions(java.lang.String)" />
      <option name="TEST_OBJECT" value="uniqueId" />
      <uniqueIds>
        <uniqueId value="[engine:junit-jupiter]/[class:algorithm.implementation.TestStateMachine]/[test-template:testSolutionValidExpressions(java.lang.String)]/[test-template-invocation:#26]" />
      </uniqueIds>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestStateMachine.testSolutionValidExpressions.[27] (¬(p ∧ q) → (¬p ∨ ¬q)) ∧ ((¬p ∨ ¬q) → ¬(p ∧ q))" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="JavaParser" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="algorithm.implementation.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="algorithm.implementation" />
      <option name="MAIN_CLASS_NAME" value="algorithm.implementation.TestStateMachine" />
      <option name="METHOD_NAME" value="testSolutionValidExpressions(java.lang.String)" />
      <option name="TEST_OBJECT" value="uniqueId" />
      <uniqueIds>
        <uniqueId value="[engine:junit-jupiter]/[class:algorithm.implementation.TestStateMachine]/[test-template:testSolutionValidExpressions(java.lang.String)]/[test-template-invocation:#27]" />
      </uniqueIds>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.Tests" />
      <item itemvalue="Application.algorithm.backup4.implementation.TestStateMachine" />
      <item itemvalue="Application.algorithm.backup3.implementation.TestStateMachine" />
      <item itemvalue="Application.TestStateMachine" />
      <item itemvalue="JUnit.TestStateMachine.testSolutionValidExpressions" />
      <item itemvalue="JUnit.TestStateMachine.testSolutionValidExpressions.[21] ((a → b) ∧ (b → a)) → (((a ∧ c) → (b ∧ c)) ∧ ((b ∧ c) → (a ∧ c)))" />
      <item itemvalue="JUnit.TestStateMachine.testSolutionValidExpressions.[26] ((p ∨ q) ∨ (r ∨ s)) → ((p ∨ s) ∨ (r ∨ q))" />
      <item itemvalue="JUnit.TestStateMachine.testSolutionValidExpressions.[27] (¬(p ∧ q) → (¬p ∨ ¬q)) ∧ ((¬p ∨ ¬q) → ¬(p ∧ q))" />
      <item itemvalue="JUnit.TestStateMachine.testSolutionValidExpressionsSolo" />
      <item itemvalue="JUnit.TestStateMachine.testSolutionValidExpressionsSolo.[1] ((¬p → q) ∧ (r ∨ ¬q) ∧ (p → (a ∨ b)) ∧ (¬r ∧ ¬b)) → a" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.TestStateMachine.testSolutionValidExpressions" />
        <item itemvalue="Application.algorithm.backup4.implementation.TestStateMachine" />
        <item itemvalue="JUnit.TestStateMachine.testSolutionValidExpressionsSolo" />
        <item itemvalue="JUnit.TestStateMachine.testSolutionValidExpressions.[21] ((a → b) ∧ (b → a)) → (((a ∧ c) → (b ∧ c)) ∧ ((b ∧ c) → (a ∧ c)))" />
        <item itemvalue="JUnit.TestStateMachine.testSolutionValidExpressionsSolo.[1] ((¬p → q) ∧ (r ∨ ¬q) ∧ (p → (a ∨ b)) ∧ (¬r ∧ ¬b)) → a" />
        <item itemvalue="Application.Tests" />
        <item itemvalue="JUnit.TestStateMachine.testSolutionValidExpressions.[27] (¬(p ∧ q) → (¬p ∨ ¬q)) ∧ ((¬p ∨ ¬q) → ¬(p ∧ q))" />
        <item itemvalue="JUnit.TestStateMachine.testSolutionValidExpressions.[26] ((p ∨ q) ∨ (r ∨ s)) → ((p ∨ s) ∨ (r ∨ q))" />
        <item itemvalue="Application.TestStateMachine" />
        <item itemvalue="Application.algorithm.backup3.implementation.TestStateMachine" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.22855.74" />
        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.22855.74" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="961377de-44c0-4ce8-9942-64e88caeedf7" name="Changes" comment="" />
      <created>1714472108047</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1714472108047</updated>
      <workItem from="1734947860502" duration="918000" />
      <workItem from="1734948795828" duration="3601000" />
      <workItem from="1734952475731" duration="211000" />
      <workItem from="1734952695030" duration="244000" />
      <workItem from="1734952947764" duration="186000" />
      <workItem from="1734953143216" duration="1322000" />
      <workItem from="1734956999411" duration="951000" />
      <workItem from="1734957966632" duration="228000" />
      <workItem from="1734958203220" duration="266000" />
      <workItem from="1734967508624" duration="948000" />
      <workItem from="1734968473299" duration="31801000" />
      <workItem from="1735211885814" duration="19299000" />
      <workItem from="1735240218107" duration="3203000" />
      <workItem from="1735476478083" duration="1428000" />
      <workItem from="1735485254678" duration="25915000" />
      <workItem from="1735651451707" duration="15129000" />
      <workItem from="1735815051958" duration="40000" />
      <workItem from="1735922727378" duration="7559000" />
      <workItem from="1735996624267" duration="26653000" />
      <workItem from="1736032071064" duration="159000" />
      <workItem from="1736080401450" duration="31599000" />
      <workItem from="1736416911844" duration="2720000" />
      <workItem from="1736794805513" duration="669000" />
      <workItem from="1736935990220" duration="10000" />
      <workItem from="1736936027898" duration="2666000" />
      <workItem from="1737041678865" duration="1962000" />
      <workItem from="1737105764975" duration="603000" />
      <workItem from="1737114873010" duration="2635000" />
      <workItem from="1737564853472" duration="72634000" />
      <workItem from="1737808793659" duration="3667000" />
      <workItem from="1737980638705" duration="1640000" />
      <workItem from="1738068764404" duration="116000" />
      <workItem from="1738104132658" duration="11118000" />
      <workItem from="1738142523333" duration="7983000" />
      <workItem from="1738342912253" duration="8143000" />
      <workItem from="1738418871421" duration="41137000" />
      <workItem from="1738586799384" duration="24608000" />
      <workItem from="1738668288185" duration="6090000" />
      <workItem from="1739125577866" duration="69232000" />
      <workItem from="1739272906313" duration="1454000" />
      <workItem from="1739312249556" duration="321000" />
      <workItem from="1739355674082" duration="19911000" />
      <workItem from="1739538506979" duration="29000" />
      <workItem from="1739562604976" duration="6511000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.j" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Rebase" />
    <MESSAGE value="Panics do panics :'(" />
    <MESSAGE value="Some things" />
    <MESSAGE value="Parcialmente bom" />
    <MESSAGE value="Correções" />
    <MESSAGE value="Versao bombada" />
    <MESSAGE value="Quase feito" />
    <MESSAGE value="Starting implementing the advanced algorithm" />
    <option name="LAST_COMMIT_MESSAGE" value="Starting implementing the advanced algorithm" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.lang.NullPointerException" package="java.lang" />
          <option name="timeStamp" value="7" />
        </breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>